syntax = "proto3";

package platform_health.v1;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/isometry/platform-health/pkg/platform_health";

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse) {}
}

message HealthCheckRequest {
  // allow specification of restricted subset of components to validate
  repeated Component components = 1;
}

message Component {
  string type = 1; // e.g. "tcp", "rest", "grpc", "kafka", "s3"
  string name = 2; // instance name
}

message HealthCheckResponse {
  string type = 1; // e.g. "tcp", "rest", "grpc", "kafka", "s3"
  string name = 2; // instance name
  Status status = 3;
  string message = 4;
  repeated google.protobuf.Any details = 5;
  repeated HealthCheckResponse components = 6;
  google.protobuf.Duration duration = 7;
}

enum Status {
  UNKNOWN = 0;
  UNHEALTHY = 1;
  HEALTHY = 2;
}
