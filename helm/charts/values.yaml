---
# Operation mode
## mode: Deployment | Job | CronJob
## Deployment: long-running Deployment
## Job: short-lived Job
## CronJob: scheduled Job
mode: ~
## namespaced: true | false
## true: can only interact with resources spawned in the same namespace
## false: can interact with resources spawned in different namespaces
namespaced: false

# Common values
common_labels: ~
common_annotations: ~
fullnameOverride: ~
nameOverride: ~

# Application container :: custom configuration
image:
  repository: ghcr.io/isometry/platform-health
  tag: ~
  pullPolicy: IfNotPresent

# Deployment :: custom configuration
## deployment-mode: deactivated if the job mode is enabled
deployment:
  replicaCount: 1
  # Container :: custom configuration
  container:
    port: &port 8080
    args: &args
      - -vv # verbose mode

# Job :: custom configuration
## job-mode: activating the job mode will deactivate the deployment mode
job:
  ## Example: Post-install and post-upgrade hooks
  #  annotations:
  #    helm.sh/hook: post-install,post-upgrade
  #    helm.sh/hook-weight: "5"
  #    helm.sh/hook-delete-policy: before-hook-creation
  # Container :: custom configuration
  container:
    port: *port
    args: *args

# Service :: custom configuration
service:
  enabled: true
  type: LoadBalancer
  port: *port

# ServiceAccount :: custom configuration
serviceAccount: ~

# RoleBinding :: custom configuration
roleBinding: ~

# ConfigMap :: custom configuration
configMap: ~

# Role :: custom configuration
role:
  # Allows the application to read the Secrets
  enableSecrets: false
  # Allows the application to read the ConfigMaps
  enableConfigMaps: true
  # Allows the application to read the Deployments, ReplicaSets, StatefulSets & DaemonSets
  enableDeployments: true
  # Allows the application to read Jobs & CronJobs
  enableJobs: true
  # Allows the application to read the resources scoped to 'cert-manager.io'
  enableCertManager: true
  # Allows the application to read ArgoCD Applications scoped to 'argoproj.io'
  enableArgoApplications: true
  # Allows the application to read the resources scoped to 'networking.k8s.io'
  enableNetworking: true
  # Allows the application to read the resources scoped to 'storage.k8s.io'
  enableStorage: true
  # Allows the application to read the resources scoped to 'policy'
  enablePodDisruptionBudgets: true
  # Allows the application to read ArgoCD ApplicationSets scoped to 'argoproj.io'
  enableArgoApplicationSets: true

# Define the health checks for the application
# config: {provider: [target]}
# @see the provider specific README.md for more information on how it can be configured
#
## Example: basic health checks
#
# config:
#   tcp:
#     - name: ssh@localhost
#       host: localhost
#       port: 22
#   tls:
#     - name: gmail
#       host: smtp.gmail.com
#       port: 465
#   http:
#     - name: google
#       url: https://google.com
config: {}
